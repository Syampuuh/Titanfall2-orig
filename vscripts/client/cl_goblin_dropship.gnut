untyped

global function CLGoblinDropship_Init

global function ServerCallback_CreateDropShipIntLighting
global function CreateCallback_Dropship
global function JetwakeFXChanged

const FX_DLIGHT_RED 	= $"veh_interior_Dlight_red"
const FX_DLIGHT_COCKPIT = $"veh_interior_Dlight_cockpit_offset"
const FX_DLIGHT_BLUE 	= $"interior_Dlight_blue_MED"
const FX_DLIGHT_COCKPIT_IMC = $"veh_interior_Dlight_cockpit_offset_IMC"

function CLGoblinDropship_Init()
{
	PrecacheParticleSystem( FX_DLIGHT_RED )
	PrecacheParticleSystem( FX_DLIGHT_BLUE )
	PrecacheParticleSystem( FX_DLIGHT_COCKPIT )
	PrecacheParticleSystem( FX_DLIGHT_COCKPIT_IMC )
}

function JetwakeFXChanged( dropship )
{
	if ( dropship.IsJetWakeFXEnabled() )
		dropship.SetGroundEffectTable( "dropship_dust" )
	else
		dropship.SetGroundEffectTable( "" )
}

function ServerCallback_CreateDropShipIntLighting( eHandle, team )
{
	entity dropship = GetEntityFromEncodedEHandle( eHandle )
	if ( !IsValid( dropship ) )
		return
	local lights = {}
	local rampLightFX, cockpitLightFX

	switch( team )
	{
		case TEAM_MILITIA:
			rampLightFX = FX_DLIGHT_RED
			cockpitLightFX = FX_DLIGHT_COCKPIT
			break

		default:
			rampLightFX = FX_DLIGHT_BLUE
			cockpitLightFX = FX_DLIGHT_COCKPIT_IMC
			break
	}

	//ramp light L
	{
		local index 		= dropship.LookupAttachment( "IntLightRampL" )
		int effectIndex 	= GetParticleSystemIndex( rampLightFX )
		lights.rampDLightL <- StartParticleEffectOnEntity( dropship, effectIndex, FX_PATTACH_POINT_FOLLOW, index )
	}

	//cockpit light 1
	{
		local index 		= dropship.LookupAttachment( "IntLightCockpit1" )
		int effectIndex 	= GetParticleSystemIndex( cockpitLightFX )
		lights.cockpitDLight <- StartParticleEffectOnEntity( dropship, effectIndex, FX_PATTACH_POINT_FOLLOW, index )
	}
}

/////////////////////////////////////////////
void function CreateCallback_Dropship( entity ent )
{
	ent.SetGroundEffectTable( "dropship_dust" )
}
